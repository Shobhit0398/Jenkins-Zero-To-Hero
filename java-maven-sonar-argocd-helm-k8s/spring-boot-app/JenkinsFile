pipeline {
  agent {
    docker {
      image 'shobhitnagar/maven-docker:latest'
      args '--user root -v /var/run/docker.sock:/var/run/docker.sock'
    }
  }

  stages {
    stage('Checkout') {
      steps {
        cleanWs() 
        echo 'Starting Checkout'
        dir('java-maven-sonar-argocd-helm-k8s') {
          git branch: 'main', url: 'https://github.com/Shobhit0398/Jenkins-Zero-To-Hero.git'
        }
      }
    }

    stage('Build and Test') {
      steps {
        dir('java-maven-sonar-argocd-helm-k8s/spring-boot-app') {
          sh '''
            java -version
            echo "Using JAVA_HOME=$JAVA_HOME"
            mvn clean package
          '''
        }
      }
    }

    stage('Static Code Analysis') {
      environment {
        SONAR_URL = "http://54.145.117.123:9000"
      }
      steps {
        dir('java-maven-sonar-argocd-helm-k8s/spring-boot-app') {
          withCredentials([string(credentialsId: '46ce1cbe-78b3-417a-bd0b-9f6e000ec067', variable: 'SONAR_AUTH_TOKEN')]) {
            sh '''
              mvn sonar:sonar \
                -Dsonar.login=$SONAR_AUTH_TOKEN \
                -Dsonar.host.url=${SONAR_URL}
            '''
          }
        }
      }
    }

    stage('Build and Push Docker Image') {
      environment {
        DOCKER_IMAGE = "shobhitnagar/ultimate-cicd:${BUILD_NUMBER}"
        REGISTRY_CREDENTIALS = credentials('docker-cred')
      }
      steps {
        dir('java-maven-sonar-argocd-helm-k8s/spring-boot-app') {
          script {
            sh 'docker build -t ${DOCKER_IMAGE} .'
            def dockerImage = docker.image("${DOCKER_IMAGE}")
            docker.withRegistry('https://index.docker.io/v1/', "docker-cred") {
              dockerImage.push()
            }
          }
        }
      }
    }

    stage('Update Deployment File') {
      environment {
        GIT_REPO_NAME = "Jenkins-Zero-To-Hero"
        GIT_USER_NAME = "Shobhit0398"
      }
      steps {
        dir('java-maven-sonar-argocd-helm-k8s') {
          withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
            sh '''
              git config user.email "shobhitnagar71@gmail.com"
              git config user.name "Shobhit0398"
              sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" spring-boot-app-manifests/deployment.yml
              git add spring-boot-app-manifests/deployment.yml
              git commit -m "Update deployment image to version ${BUILD_NUMBER}"
              git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main
            '''
          }
        }
      }
    }
  }
}
